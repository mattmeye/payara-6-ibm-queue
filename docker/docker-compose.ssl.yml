version: '3.8'

services:
  ibmmq-ssl:
    image: icr.io/ibm-messaging/mq:latest
    container_name: ibmmq-ssl-dev
    ports:
      - "1414:1414"
      - "9443:9443"
      - "9157:9157"
    volumes:
      - qm1data:/mnt/mqm
      - ./ssl/certs:/opt/mqm/ssl/certs:ro
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
      MQ_APP_PASSWORD: passw0rd
      MQ_ENABLE_METRICS: "true"
      # SSL Configuration
      MQ_TLS_KEYSTORE: /opt/mqm/ssl/certs/server-keystore.jks
      MQ_TLS_PASSPHRASE: changeit
      MQ_TLS_TRUSTSTORE: /opt/mqm/ssl/certs/truststore.jks
      MQ_TLS_TRUST_PASSPHRASE: changeit
    networks:
      - mq-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mqdb
      POSTGRES_USER: mquser
      POSTGRES_PASSWORD: mqpassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mquser -d mqdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  payara-ssl:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: payara6-ssl-app
    ports:
      - "8080:8080"
      - "4848:4848"
      - "9009:9009"
    depends_on:
      - ibmmq-ssl
      - postgres
    environment:
      - IBM_MQ_HOSTNAME=ibmmq-ssl
      - IBM_MQ_PORT=1414
      - IBM_MQ_QUEUE_MANAGER=QM1
      - IBM_MQ_CHANNEL=DEV.APP.SVRCONN
      - IBM_MQ_USERNAME=app
      - IBM_MQ_PASSWORD=passw0rd
      - IBM_MQ_SSL_ENABLED=true
      - IBM_MQ_SSL_CIPHER_SUITE=TLS_RSA_WITH_AES_256_CBC_SHA256
      - IBM_MQ_SSL_KEYSTORE_PATH=/opt/payara/ssl/client-keystore.jks
      - IBM_MQ_SSL_KEYSTORE_PASSWORD=changeit
      - IBM_MQ_SSL_TRUSTSTORE_PATH=/opt/payara/ssl/truststore.jks
      - IBM_MQ_SSL_TRUSTSTORE_PASSWORD=changeit
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mqdb
      - DB_USER=mquser
      - DB_PASSWORD=mqpassword
    networks:
      - mq-network
    volumes:
      - ../target:/opt/payara/deployments
      - ./ssl/certs:/opt/payara/ssl:ro

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mq-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - mq-network
    depends_on:
      - prometheus

volumes:
  qm1data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  mq-network:
    driver: bridge